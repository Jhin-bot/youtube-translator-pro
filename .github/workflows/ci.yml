name: CI

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.9', '3.10', '3.11', '3.12']

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install pytest pytest-cov pytest-qt
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      shell: bash
        
    - name: Test with pytest
      run: |
        pytest tests/ --cov=src
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: false

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install black isort mypy ruff
        
    - name: Lint with Black
      run: |
        black --check src tests
        
    - name: Lint with isort
      run: |
        isort --check src tests
        
    - name: Type check with mypy
      run: |
        mypy src
        
    - name: Lint with ruff
      run: |
        ruff check src tests

  build:
    needs: [test, lint]
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest]
        include:
          - os: windows-latest
            artifact_name: youtube_translator_pro_windows.zip
          - os: macos-latest
            artifact_name: youtube_translator_pro_macos.zip
            
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install -r requirements.txt
        python -m pip install pyinstaller
        
    - name: Build with PyInstaller
      run: |
        pyinstaller --onefile --windowed --name YouTube_Translator_Pro --add-data "resources:resources" main.py
        
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.artifact_name }}
        path: dist/
